name: YamDB workflow

on: [push]

jobs:  
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          stack_file_name: docker-compose.yaml
          script: | 
            #sudo docker-compose stop
            #sudo docker-compose rm web
            # Создаст файл для переменных окружения
            cd yamdb_final/
            touch .env 
            # Наполнит файл переменными окружения из секретов GitHub 
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker stop $(sudo docker ps -a -q)
            sudo docker-compose up --build
          script: | 
            sudo docker-compose exec web python manage.py makemigrations users
            sudo docker-compose exec web python manage.py migrate users
            sudo docker-compose exec web python manage.py makemigrations titles
            sudo docker-compose exec web python manage.py migrate titles
            sudo docker-compose exec web python manage.py makemigrations reviews
            sudo docker-compose exec web python manage.py migrate reviews
            sudo docker-compose exec web python manage.py makemigrations tokens
            sudo docker-compose exec web python manage.py migrate tokens
            sudo docker-compose exec web python manage.py migrate
            sudo docker-compose exec web python manage.py collectstatic

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен! git